// <auto-generated />
using System;
using LALHData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LALHData.Migrations
{
    [DbContext(typeof(LALetterHeadDBcontext))]
    [Migration("20220923110707_InitialMigration1")]
    partial class InitialMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LALHDomain.EntityModels.MasterEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddrLine1")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("AddrLine2")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("AddrLine3")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("AddrLine4")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("FName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Fax")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("LName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Mobile")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecID")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("ReportingHead")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("ReportingHeadEmails")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Telephone")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isEnable")
                        .HasColumnType("bit");

                    b.Property<int>("isForLAUser")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.ToTable("MasterEmployee");
                });

            modelBuilder.Entity("LALHDomain.EntityModels.UserManager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AAccess")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultDiv")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("EmpID")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isFullRights")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("UserManager");
                });

            modelBuilder.Entity("LALHDomain.EntityModels.WinAppMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUser")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("RecID")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("WinUser")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("WinAppMap");
                });
#pragma warning restore 612, 618
        }
    }
}
